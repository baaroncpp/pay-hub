plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'jacoco'
	id 'pmd'
}

group = 'com.jajjamind'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'

	compile 'org.springframework.boot:spring-boot-starter-webflux'
	compile 'org.projectreactor:reactor-spring:1.0.1.RELEASE'
	compile group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: '5.4.1'

	implementation project(':commons')


}

ext['spring-security.version']='5.4.1'
ext['spring.version']='5.4.1'
ext['springCloudVersion']='2020.0.0-SNAPSHOT'

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jacoco {
	toolVersion = "0.8.5"
	reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport {
	dependsOn(test)
}

pmd {
	consoleOutput = true
	toolVersion = "6.21.0"
	rulePriority = 5
	// ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
}