plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'jacoco'
	//id 'pmd'
	id 'groovy'
}

group = 'com.jajjamind'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.flywaydb:flyway-core'
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-oauth2', version: '2.2.4.RELEASE'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.security:spring-security-test'
	compile group: 'org.jooq', name: 'jooq', version: '3.14.6'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
	compile group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.3'
	compile group: 'org.springdoc', name: 'springdoc-openapi-security', version: '1.5.3'

	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-oauth2', version: '2.2.4.RELEASE'

	compile 'org.springframework.boot:spring-boot-starter-webflux'
	compile 'org.projectreactor:reactor-spring:1.0.1.RELEASE'
	compile group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: '5.4.1'

	compile 'org.codehaus.groovy:groovy-all:3.0.7'

	testCompile group: 'org.mockito', name: 'mockito-core', version: '2.10.0'
	testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.9'
	testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'
	testCompile group: 'org.assertj', name: 'assertj-core', version: '3.6.1'
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.4.2')
	testImplementation 'org.mockito:mockito-junit-jupiter:3.6.28'

	implementation project(':commons')
	implementation project(':interswitch')
	implementation project(':mobile-money')
	implementation project(':data-bundles')
	implementation project(':notofication-service')

}

ext['spring-security.version']='5.4.1'
ext['spring.version']='5.4.1'
ext['springCloudVersion']='2020.0.0-SNAPSHOT'

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
	testLogging.events("passed","failed","skipped")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jacoco {
	toolVersion = "0.8.5"
	reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport {
	dependsOn(test)
}
//
//pmd {
//	consoleOutput = true
//	toolVersion = "6.21.0"
//	rulePriority = 5
//	// ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
//}

sourceSets {
	main {
		groovy {
			// this makes the groovy-compiler compile groovy- as well
			// as java-files.
			// Needed, because java is normally compiled before groovy.
			// Since we are using groovy objects from java, we need it
			// the other way round.
			srcDirs = ['src/main/java']
		}
		java {
			srcDirs = [] // don't compile Java code twice
		}
	}
}